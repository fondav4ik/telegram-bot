import logging
import asyncio
import sys
import datetime
import sqlite3
import random

from datetime import datetime
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

TOKEN = 
logging.basicConfig(level=logging.INFO, format="%(asctime)s | %(levelname)s | %(message)s")

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def cmd_start(message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ø—Ä–æ—Å—Ç–æ–π EchoBot. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å ‚Äî –∏ —è —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä—é!')
@dp.message()
async def echo(message):
    await bot.copy_message(chat_id=message.chat.id, from_chat_id=message.chat.id, message_id=message.message_id)

async def main():
    logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await dp.start_polling(bot)
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('–ë–æ—Ç–∞ –≤—ã–∫–ª—é—á–∏–ª–∏...')
